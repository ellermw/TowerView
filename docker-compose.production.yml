version: "3.8"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-mediaapp}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_me}
      POSTGRES_DB: ${DB_NAME:-mediaapp}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mediaapp}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://${DB_USER:-mediaapp}:${DB_PASSWORD:-change_me}@db:5432/${DB_NAME:-mediaapp}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER:-mediaapp}
      DB_PASSWORD: ${DB_PASSWORD:-change_me}
      DB_NAME: ${DB_NAME:-mediaapp}

      # Redis (using local Redis inside container)
      REDIS_URL: redis://localhost:6379

      # Security
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-me}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}

      # Python
      PYTHONUNBUFFERED: 1
    ports:
      - "${APP_PORT:-80}:80"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data: